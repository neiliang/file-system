<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biz.dao.FileRecordMapper">
  <resultMap id="BaseResultMap" type="com.biz.entity.FileRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="old_file_name" jdbcType="VARCHAR" property="oldFileName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_name, file_name, file_size, file_type, old_file_name, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.biz.entity.FileRecord">
    insert into file_record (id, group_name, file_name, 
      file_size, file_type, old_file_name, 
      user_id)
    values (#{id,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR}, #{oldFileName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.biz.entity.FileRecord">
    insert into file_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="oldFileName != null">
        old_file_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="oldFileName != null">
        #{oldFileName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.biz.entity.FileRecord">
    update file_record
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="oldFileName != null">
        old_file_name = #{oldFileName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biz.entity.FileRecord">
    update file_record
    set group_name = #{groupName,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_type = #{fileType,jdbcType=VARCHAR},
      old_file_name = #{oldFileName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>